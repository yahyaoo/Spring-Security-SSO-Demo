<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.yahyaoo.mapper.DemoUserMapper">
    <resultMap id="BaseResultMap" type="com.github.yahyaoo.entity.po.DemoUser">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="username" jdbcType="VARCHAR"/>
        <result column="user_mail" property="userMail" jdbcType="VARCHAR"/>
        <result column="user_password" property="password" jdbcType="VARCHAR"/>
        <result column="user_address" property="userAddress" jdbcType="VARCHAR"/>
        <result column="user_tel" property="userTel" jdbcType="VARCHAR"/>
        <result column="user_birthday" property="userBirthday" jdbcType="TIMESTAMP"/>
        <result column="user_created" property="userCreated" jdbcType="TIMESTAMP"/>
        <result column="user_updated" property="userUpdated" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id, user_name, user_mail, user_password, user_address, user_tel, user_birthday,
    user_created, user_updated
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.github.yahyaoo.entity.po.DemoUserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from demo_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from demo_user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from demo_user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.github.yahyaoo.entity.po.DemoUserExample">
        delete from demo_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.github.yahyaoo.entity.po.DemoUser">
        insert into demo_user (user_id, user_name, user_mail,
                               user_password, user_address, user_tel,
                               user_birthday, user_created, user_updated)
        values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userMail,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR}, #{userTel,jdbcType=VARCHAR},
                #{userBirthday,jdbcType=TIMESTAMP}, #{userCreated,jdbcType=TIMESTAMP},
                #{userUpdated,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.github.yahyaoo.entity.po.DemoUser">
        insert into demo_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                user_name,
            </if>
            <if test="userMail != null">
                user_mail,
            </if>
            <if test="password != null">
                user_password,
            </if>
            <if test="userAddress != null">
                user_address,
            </if>
            <if test="userTel != null">
                user_tel,
            </if>
            <if test="userBirthday != null">
                user_birthday,
            </if>
            <if test="userCreated != null">
                user_created,
            </if>
            <if test="userUpdated != null">
                user_updated,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="userMail != null">
                #{userMail,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userAddress != null">
                #{userAddress,jdbcType=VARCHAR},
            </if>
            <if test="userTel != null">
                #{userTel,jdbcType=VARCHAR},
            </if>
            <if test="userBirthday != null">
                #{userBirthday,jdbcType=TIMESTAMP},
            </if>
            <if test="userCreated != null">
                #{userCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="userUpdated != null">
                #{userUpdated,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.github.yahyaoo.entity.po.DemoUserExample"
            resultType="java.lang.Integer">
        select count(*) from demo_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update demo_user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                user_name = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.userMail != null">
                user_mail = #{record.userMail,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                user_password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.userAddress != null">
                user_address = #{record.userAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.userTel != null">
                user_tel = #{record.userTel,jdbcType=VARCHAR},
            </if>
            <if test="record.userBirthday != null">
                user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userCreated != null">
                user_created = #{record.userCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userUpdated != null">
                user_updated = #{record.userUpdated,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update demo_user
        set user_id = #{record.userId,jdbcType=INTEGER},
        user_name = #{record.username,jdbcType=VARCHAR},
        user_mail = #{record.userMail,jdbcType=VARCHAR},
        user_password = #{record.password,jdbcType=VARCHAR},
        user_address = #{record.userAddress,jdbcType=VARCHAR},
        user_tel = #{record.userTel,jdbcType=VARCHAR},
        user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
        user_created = #{record.userCreated,jdbcType=TIMESTAMP},
        user_updated = #{record.userUpdated,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.yahyaoo.entity.po.DemoUser">
        update demo_user
        <set>
            <if test="username != null">
                user_name = #{username,jdbcType=VARCHAR},
            </if>
            <if test="userMail != null">
                user_mail = #{userMail,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                user_password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userAddress != null">
                user_address = #{userAddress,jdbcType=VARCHAR},
            </if>
            <if test="userTel != null">
                user_tel = #{userTel,jdbcType=VARCHAR},
            </if>
            <if test="userBirthday != null">
                user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
            </if>
            <if test="userCreated != null">
                user_created = #{userCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="userUpdated != null">
                user_updated = #{userUpdated,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.yahyaoo.entity.po.DemoUser">
        update demo_user
        set user_name     = #{username,jdbcType=VARCHAR},
            user_mail     = #{userMail,jdbcType=VARCHAR},
            user_password = #{password,jdbcType=VARCHAR},
            user_address  = #{userAddress,jdbcType=VARCHAR},
            user_tel      = #{userTel,jdbcType=VARCHAR},
            user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
            user_created  = #{userCreated,jdbcType=TIMESTAMP},
            user_updated  = #{userUpdated,jdbcType=TIMESTAMP}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>
